[{"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\index.js":"1","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\App.js":"2","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\terrain\\Terrain.js":"3","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\lighting\\Lighting.js":"4","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\Player.js":"5","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\PlayerControls.js":"6","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\PlayerCamera.js":"7","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\PlayerMovement.js":"8","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\functions\\Math.js":"9","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\terrain\\Grass.js":"10","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\terrain\\Water.js":"11"},{"size":149,"mtime":1609105871226,"results":"12","hashOfConfig":"13"},{"size":561,"mtime":1609546831727,"results":"14","hashOfConfig":"13"},{"size":2400,"mtime":1609616940450,"results":"15","hashOfConfig":"13"},{"size":711,"mtime":1609365991058,"results":"16","hashOfConfig":"13"},{"size":1447,"mtime":1609318704709,"results":"17","hashOfConfig":"13"},{"size":970,"mtime":1609197322926,"results":"18","hashOfConfig":"13"},{"size":528,"mtime":1609197155696,"results":"19","hashOfConfig":"13"},{"size":2108,"mtime":1609318338213,"results":"20","hashOfConfig":"13"},{"size":2255,"mtime":1609137127364,"results":"21","hashOfConfig":"13"},{"size":1347,"mtime":1609617151013,"results":"22","hashOfConfig":"13"},{"size":814,"mtime":1609549688542,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hhrckf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\index.js",[],["51","52"],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\App.js",[],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\terrain\\Terrain.js",["53","54","55","56","57","58"],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\lighting\\Lighting.js",["59","60"],"import React, { useRef } from 'react'\r\nimport * as THREE from 'three'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <fog attach=\"fog\" args={['white', 0, 40]} /> */}\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[150, 150, 150]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight />\r\n      <directionalLight\r\n        position={[150, 150, 150]}\r\n        shadow-camera-left={-1000}\r\n        shadow-camera-bottom={-1000}\r\n        shadow-camera-right={1000}\r\n        shadow-camera-top={1000}\r\n        shadow-camera-near={0.1}\r\n        shadow-camera-far={1500}\r\n        castShadow\r\n      />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\Player.js",[],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\PlayerControls.js",["61"],"import { useState, useEffect } from 'react'\r\n\r\nexport const usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({\r\n    forward: false,\r\n    backward: false,\r\n    left: false,\r\n    right: false,\r\n    jump: false,\r\n    run: false,\r\n  })\r\n\r\n  const keys = {\r\n    KeyW: 'forward',\r\n    KeyS: 'backward',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    Space: 'jump',\r\n    ShiftLeft: 'run',\r\n  }\r\n\r\n  const moveFieldByKey = key => keys[key]\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n\r\n    const handleKeyUp = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\PlayerCamera.js",[],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\player\\PlayerMovement.js",["62"],"import { useEffect, useRef, forwardRef } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerMovement = forwardRef((props, ref) => {\r\n  const STATS = props.STATS\r\n  const api = props.api\r\n  const {forward, backward, left, right, jump, run} = props.C\r\n\r\n  const velocity = useRef([0, 0, 0])\r\n  const position = useRef([0, 0, 0])\r\n\r\n  //no continuous jumping\r\n  const jumpCoolDown = useRef()\r\n\r\n  const direction = new THREE.Vector3()\r\n  const frontVector = new THREE.Vector3()\r\n  const sideVector = new THREE.Vector3()\r\n\r\n  const camEuler = new THREE.Euler()\r\n\r\n  const playerOnGround = () => {\r\n    return position.current[1] < 1\r\n  }\r\n  // const playerOnGround = () => {\r\n  //   return true\r\n  // }\r\n\r\n  const applyFriction = () => {\r\n    velocity.current[0] -= velocity.current[0] / STATS.inertia\r\n    velocity.current[2] -= velocity.current[2] / STATS.inertia\r\n  }\r\n\r\n  const calculateVelocity = () => {\r\n    frontVector.set(0, 0, backward - forward)\r\n    sideVector.set(left - right, 0, 0)\r\n    camEuler.set(0, 0, 0)\r\n\r\n    let FinalSpeed = STATS.speed\r\n\r\n    if (left || right) {\r\n      FinalSpeed = STATS.pan_speed()\r\n    } else if (run) {\r\n      FinalSpeed = STATS.run_speed()\r\n    }\r\n\r\n    direction\r\n      .subVectors(frontVector, sideVector)\r\n      .normalize()\r\n      .multiplyScalar(FinalSpeed)\r\n      .applyEuler(props.camera.rotation)\r\n\r\n    applyFriction()\r\n\r\n    const v = [\r\n      velocity.current[0] + direction.x / STATS.inertia,\r\n      velocity.current[1],\r\n      velocity.current[2] + direction.z / STATS.inertia,\r\n    ]\r\n\r\n    if (playerOnGround()) {\r\n      api.velocity.set(v[0], v[1], v[2])\r\n\r\n      if (!jump) jumpCoolDown.current = false\r\n      if (jump && !jumpCoolDown.current) {\r\n        jumpCoolDown.current = true\r\n        api.velocity.set(v[0], STATS.jump_height(), v[2])\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.velocity.subscribe(v => (velocity.current = v))\r\n    api.position.subscribe(v => (position.current = v))\r\n  }, [])\r\n\r\n  useFrame(() => {\r\n    calculateVelocity()\r\n  })\r\n\r\n  return null\r\n})\r\n","C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\functions\\Math.js",[],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\terrain\\Grass.js",["63","64","65"],"C:\\Users\\Dev\\Desktop\\Develop\\r3f\\r3f-infinite-terrain\\src\\terrain\\Water.js",["66","67"],"import React, { useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport { usePlane } from 'use-cannon'\r\n\r\nexport function Water() {\r\n  const mapWidth = 1000,\r\n    mapLength = 1000\r\n  const vX = 64\r\n\r\n  const W = 0\r\n\r\n  const [ref, api] = usePlane(() => ({\r\n    position: [0, W, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    args: [mapWidth, mapLength, vX, vX],\r\n  }))\r\n\r\n  const light = useMemo(() => new THREE.SpotLight(0xffffff), [])\r\n\r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[mapWidth, mapLength, vX, vX]}\r\n      />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        side={THREE.DoubleSide}\r\n        metalness={2}\r\n        color=\"blue\"\r\n        transparent\r\n        opacity={0.2}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":34},{"ruleId":"72","severity":1,"message":"76","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":8,"column":8,"nodeType":"74","messageId":"75","endLine":8,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":17},{"ruleId":"72","severity":1,"message":"79","line":63,"column":10,"nodeType":"74","messageId":"75","endLine":63,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":74,"column":6,"nodeType":"82","endLine":74,"endColumn":8,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":23},{"ruleId":"72","severity":1,"message":"84","line":2,"column":13,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":38,"column":6,"nodeType":"82","endLine":38,"endColumn":8,"suggestions":"86"},{"ruleId":"80","severity":1,"message":"87","line":75,"column":6,"nodeType":"82","endLine":75,"endColumn":8,"suggestions":"88"},{"ruleId":"72","severity":1,"message":"89","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":18},{"ruleId":"80","severity":1,"message":"90","line":8,"column":9,"nodeType":"91","endLine":8,"endColumn":30},{"ruleId":"80","severity":1,"message":"92","line":30,"column":6,"nodeType":"82","endLine":30,"endColumn":8,"suggestions":"93"},{"ruleId":"72","severity":1,"message":"94","line":12,"column":15,"nodeType":"74","messageId":"75","endLine":12,"endColumn":18},{"ruleId":"72","severity":1,"message":"95","line":18,"column":9,"nodeType":"74","messageId":"75","endLine":18,"endColumn":14},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useControl' is defined but never used.","'rocks' is defined but never used.","'rocksDisp' is defined but never used.","'ref' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'geometry'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'THREE' is defined but never used.","React Hook useEffect has a missing dependency: 'moveFieldByKey'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has missing dependencies: 'api.position' and 'api.velocity'. Either include them or remove the dependency array.",["100"],"'useFrame' is defined but never used.","The 'initialPositions' array makes the dependencies of useMemo Hook (at line 18) change on every render. To fix this, wrap the initialization of 'initialPositions' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'Canvas'. Either include it or remove the dependency array.",["101"],"'api' is assigned a value but never used.","'light' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [geometry]",{"range":"110","text":"111"},"Update the dependencies array to be: [moveFieldByKey]",{"range":"112","text":"113"},"Update the dependencies array to be: [api.position, api.velocity]",{"range":"114","text":"115"},"Update the dependencies array to be: [Canvas]",{"range":"116","text":"117"},[2059,2061],"[geometry]",[943,945],"[moveFieldByKey]",[2029,2031],"[api.position, api.velocity]",[772,774],"[Canvas]"]