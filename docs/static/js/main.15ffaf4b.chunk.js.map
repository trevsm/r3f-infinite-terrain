{"version":3,"sources":["lighting/Lighting.js","terrain/Terrain.js","App.js","index.js"],"names":["Lighting","props","Sky","distance","sunPosition","inclination","azimuth","intensity","castShadow","position","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Plane","geometry","THREE","vertices","forEach","v","z","Math","random","_ModifyVertices","material","color","side","wireframe","args","Terrain","rotation","PI","App","shadowMap","gl","alpha","camera","fov","OrbitControls","softShadows","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAW,SAAAC,GACtB,OACE,oCAEE,kBAACC,EAAA,EAAD,CACEC,SAAU,KACVC,YAAa,CAAC,IAAK,EAAG,GACtBC,YAAa,EACbC,QAAS,MAEX,kCAAcC,UAAW,KACzB,sCACEC,YAAU,EACVC,SAAU,CAAC,IAAK,EAAG,GACnBF,UAAW,IACXG,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,wBAAuB,O,OCd/B,IAAMC,EAAQ,SAAAhB,GACZ,IAAMiB,EAAW,IAAIC,gBAAoB,GAAI,GAAI,GAAI,KARvD,SAAyBD,GAEvBA,EAASE,SAASC,SAAQ,SAAAC,GACxBA,EAAEC,EAFc,EAEVC,KAAKC,YAObC,CAAgBR,GAEhB,IAAMS,EAAW,IAAIR,oBAAwB,CAC3CS,MAAO,OACPC,KAAMV,aACNW,WAAU,IAGZ,OAAO,wCAAMC,KAAM,CAACb,EAAUS,IAAe1B,KAGlC+B,EAAU,WACrB,OACE,oCACE,kBAAC,EAAD,CAAOC,SAAU,CAACT,KAAKU,GAAK,EAAG,EAAGV,KAAKU,GAAK,O,MCfnC,SAASC,IACtB,OACE,kBAAC,IAAD,CACEC,WAAS,EACTC,GAAI,CAAEC,OAAO,GACbC,OAAQ,CAAE9B,SAAU,EAAE,GAAI,EAAG,IAAK+B,IAAK,KAEvC,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAXNC,cCLAC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.15ffaf4b.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <fog attach=\"fog\" args={['white', 0, 40]} /> */}\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[2.5, 8, 5]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight intensity={0.4} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[2.5, 8, 5]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as THREE from 'three'\r\n\r\nfunction _ModifyVertices(geometry) {\r\n  const amplitude = 1\r\n  geometry.vertices.forEach(v => {\r\n    v.z = Math.random() * amplitude\r\n  })\r\n}\r\n\r\nconst Plane = props => {\r\n  const geometry = new THREE.PlaneGeometry(10, 10, 20, 20)\r\n\r\n  _ModifyVertices(geometry)\r\n\r\n  const material = new THREE.MeshBasicMaterial({\r\n    color: 'grey',\r\n    side: THREE.DoubleSide,\r\n    wireframe:true\r\n  })\r\n\r\n  return <mesh args={[geometry, material]} {...props}/>\r\n}\r\n\r\nexport const Terrain = () => {\r\n  return (\r\n    <>\r\n      <Plane rotation={[Math.PI / 2, 0, Math.PI / 2]} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { OrbitControls, softShadows } from '@react-three/drei'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Terrain } from './terrain/Terrain'\r\n\r\nimport './App.css'\r\n\r\nsoftShadows()\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas\r\n      shadowMap\r\n      gl={{ alpha: false }}\r\n      camera={{ position: [-10, 3, 10], fov: 60 }}\r\n    >\r\n      <OrbitControls />\r\n      <Lighting />\r\n      <Terrain />\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}