{"version":3,"sources":["lighting/Lighting.js","functions/Math.js","terrain/Terrain.js","App.js","index.js"],"names":["Lighting","props","Sky","distance","sunPosition","inclination","azimuth","intensity","castShadow","position","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","perlin","rand_vect","theta","Math","random","PI","x","cos","y","sin","dot_prod_grid","vx","vy","g_vect","d_vect","this","gradients","smootherstep","interp","a","b","seed","memory","get","hasOwnProperty","xf","floor","yf","tl","tr","bl","br","xt","xb","v","Plane","S","useControl","type","value","min","max","V","c","geometry","THREE","size","vertices","forEach","z","_ModifyVertices","material","color","side","wireframe","args","Terrain","rotation","App","Provider","shadowMap","gl","alpha","camera","fov","Canvas","OrbitControls","softShadows","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.318a2550.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <fog attach=\"fog\" args={['white', 0, 40]} /> */}\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[2.5, 8, 5]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight intensity={0.4} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[2.5, 8, 5]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export const math = (function () {\r\n  return {\r\n    rand_range: function (a, b) {\r\n      return Math.random() * (b - a) + a\r\n    },\r\n\r\n    rand_normalish: function () {\r\n      const r = Math.random() + Math.random() + Math.random() + Math.random()\r\n      return (r / 4.0) * 2.0 - 1\r\n    },\r\n\r\n    rand_int: function (a, b) {\r\n      return Math.round(Math.random() * (b - a) + a)\r\n    },\r\n\r\n    lerp: function (x, a, b) {\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    smoothstep: function (x, a, b) {\r\n      x = x * x * (3.0 - 2.0 * x)\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    smootherstep: function (x, a, b) {\r\n      x = x * x * x * (x * (x * 6 - 15) + 10)\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    clamp: function (x, a, b) {\r\n      return Math.min(Math.max(x, a), b)\r\n    },\r\n\r\n    sat: function (x) {\r\n      return Math.min(Math.max(x, 0.0), 1.0)\r\n    },\r\n\r\n    in_range: (x, a, b) => {\r\n      return x >= a && x <= b\r\n    },\r\n  }\r\n})()\r\n\r\nexport let perlin = {\r\n  rand_vect: function () {\r\n    let theta = Math.random() * 2 * Math.PI\r\n    return { x: Math.cos(theta), y: Math.sin(theta) }\r\n  },\r\n  dot_prod_grid: function (x, y, vx, vy) {\r\n    let g_vect\r\n    let d_vect = { x: x - vx, y: y - vy }\r\n    if (this.gradients[[vx, vy]]) {\r\n      g_vect = this.gradients[[vx, vy]]\r\n    } else {\r\n      g_vect = this.rand_vect()\r\n      this.gradients[[vx, vy]] = g_vect\r\n    }\r\n    return d_vect.x * g_vect.x + d_vect.y * g_vect.y\r\n  },\r\n  smootherstep: function (x) {\r\n    return 6 * x ** 5 - 15 * x ** 4 + 10 * x ** 3\r\n  },\r\n  interp: function (x, a, b) {\r\n    return a + this.smootherstep(x) * (b - a)\r\n  },\r\n  seed: function () {\r\n    this.gradients = {}\r\n  },\r\n  memory: {},\r\n  get: function (x, y) {\r\n    if (this.memory.hasOwnProperty([x, y])) return this.memory[[x, y]]\r\n    let xf = Math.floor(x)\r\n    let yf = Math.floor(y)\r\n    //interpolate\r\n    let tl = this.dot_prod_grid(x, y, xf, yf)\r\n    let tr = this.dot_prod_grid(x, y, xf + 1, yf)\r\n    let bl = this.dot_prod_grid(x, y, xf, yf + 1)\r\n    let br = this.dot_prod_grid(x, y, xf + 1, yf + 1)\r\n    let xt = this.interp(x - xf, tl, tr)\r\n    let xb = this.interp(x - xf, bl, br)\r\n    let v = this.interp(y - yf, xt, xb)\r\n    this.memory[[x, y]] = v\r\n    return v\r\n  },\r\n}\r\nperlin.seed()\r\n","import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { useControl } from 'react-three-gui'\r\n\r\nimport { perlin } from '../functions/Math'\r\n\r\nfunction _ModifyVertices(geometry, size, a, b, c) {\r\n  geometry.vertices.forEach(v => {\r\n    v.z = a * perlin.get(b * v.x, c * v.y)\r\n  })\r\n}\r\n\r\nconst Plane = props => {\r\n  const S = useControl('Size', { type: 'number', value: 15, min: 10, max: 30 })\r\n  const V = useControl('Vertices', {\r\n    type: 'number',\r\n    value: 70,\r\n    min: 10,\r\n    max: 100,\r\n  })\r\n\r\n  const a = useControl('Amplitude', {\r\n    type: 'number',\r\n    value: 1.5,\r\n    min: -Math.PI,\r\n    max: Math.PI,\r\n  })\r\n\r\n  const b = useControl('X', {\r\n    type: 'number',\r\n    value: 0.5,\r\n    min: -Math.PI,\r\n    max: Math.PI,\r\n  })\r\n\r\n  const c = useControl('Y', {\r\n    type: 'number',\r\n    value: 0.5,\r\n    min: -Math.PI,\r\n    max: Math.PI,\r\n  })\r\n\r\n  const geometry = new THREE.PlaneGeometry(S, S, V, V)\r\n\r\n  _ModifyVertices(geometry, S, a, b, c)\r\n\r\n  const material = new THREE.MeshBasicMaterial({\r\n    color: 'grey',\r\n    side: THREE.DoubleSide,\r\n    wireframe: true,\r\n  })\r\n\r\n  return <mesh args={[geometry, material]} {...props} />\r\n}\r\n\r\nexport const Terrain = () => {\r\n  return (\r\n    <>\r\n      <Plane rotation={[Math.PI / 2, 0, Math.PI / 2]} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Controls } from 'react-three-gui';\r\nimport { OrbitControls, softShadows } from '@react-three/drei'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Terrain } from './terrain/Terrain'\r\n\r\nimport './App.css'\r\n\r\nsoftShadows()\r\n\r\nexport default function App() {\r\n  return (\r\n    <Controls.Provider\r\n      shadowMap\r\n      gl={{ alpha: false }}\r\n      camera={{ position: [20, 3, 20], fov: 60 }}\r\n    >\r\n      <Controls.Canvas>\r\n        <OrbitControls />\r\n        <Lighting />\r\n        <Terrain />\r\n      </Controls.Canvas>\r\n      <Controls />\r\n    </Controls.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}