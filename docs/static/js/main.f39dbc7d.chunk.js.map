{"version":3,"sources":["lighting/Lighting.js","terrain/Terrain.js","App.js","index.js"],"names":["Lighting","props","Sky","distance","sunPosition","inclination","azimuth","intensity","castShadow","position","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Plane","S","useControl","type","value","min","max","V","a","Math","PI","b","geometry","THREE","size","vertices","forEach","v","x","y","z","sin","cos","_ModifyVertices","material","color","side","wireframe","args","Terrain","rotation","App","Provider","shadowMap","gl","alpha","camera","fov","Canvas","OrbitControls","softShadows","ReactDOM","render","document","getElementById"],"mappings":"yOAGaA,EAAW,SAAAC,GACtB,OACE,oCAEE,kBAACC,EAAA,EAAD,CACEC,SAAU,KACVC,YAAa,CAAC,IAAK,EAAG,GACtBC,YAAa,EACbC,QAAS,MAEX,kCAAcC,UAAW,KACzB,sCACEC,YAAU,EACVC,SAAU,CAAC,IAAK,EAAG,GACnBF,UAAW,IACXG,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,wBAAuB,O,OCL/B,IAAMC,EAAQ,SAAAhB,GACZ,IAAMiB,EAAIC,YAAW,OAAQ,CAAEC,KAAM,SAAUC,MAAO,GAAIC,IAAK,GAAIC,IAAK,KAClEC,EAAIL,YAAW,WAAY,CAC/BC,KAAM,SACNC,MAAO,GACPC,IAAK,GACLC,IAAK,MAGDE,EAAIN,YAAW,IAAK,CAAEC,KAAM,SAAUC,MAAO,GAAIC,KAAMI,KAAKC,GAAIJ,IAAKG,KAAKC,KAC1EC,EAAIT,YAAW,IAAK,CAAEC,KAAM,SAAUC,MAAO,IAAKC,KAAMI,KAAKC,GAAIJ,IAAKG,KAAKC,KAE3EE,EAAW,IAAIC,gBAAoBZ,EAAGA,EAAGM,EAAGA,IAzBpD,SAAyBK,EAAUE,EAAMN,EAAGG,GAC1CC,EAASG,SAASC,SAAQ,SAAAC,GACX,IAAIJ,UAAc,EAAG,GACrB,IAAIA,UAAcI,EAAEC,EAAGD,EAAEE,GAMtCF,EAAEG,EAAIZ,EAAIC,KAAKY,IAAIV,EAAIM,EAAEC,GAAKV,EAAIC,KAAKa,IAAIX,EAAIM,EAAEE,MAkBnDI,CAAgBX,EAAUX,EAAGO,EAAGG,GAEhC,IAAMa,EAAW,IAAIX,oBAAwB,CAC3CY,MAAO,OACPC,KAAMb,aACNc,WAAW,IAGb,OAAO,wCAAMC,KAAM,CAAChB,EAAUY,IAAexC,KAGlC6C,EAAU,WACrB,OACE,oCACE,kBAAC,EAAD,CAAOC,SAAU,CAACrB,KAAKC,GAAK,EAAG,EAAGD,KAAKC,GAAK,O,OCnCnC,SAASqB,IACtB,OACE,kBAAC,IAASC,SAAV,CACEC,WAAS,EACTC,GAAI,CAAEC,OAAO,GACbC,OAAQ,CAAE5C,SAAU,CAAC,GAAI,EAAG,IAAK6C,IAAK,KAEtC,kBAAC,IAASC,OAAV,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,OAdNC,cCLAC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f39dbc7d.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <fog attach=\"fog\" args={['white', 0, 40]} /> */}\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[2.5, 8, 5]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight intensity={0.4} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[2.5, 8, 5]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { useControl } from 'react-three-gui'\r\n\r\nimport { math } from '../functions/Math'\r\n\r\nfunction _ModifyVertices(geometry, size, a, b) {\r\n  geometry.vertices.forEach(v => {\r\n    let center = new THREE.Vector2(0, 0)\r\n    let vertex = new THREE.Vector2(v.x, v.y)\r\n\r\n    // let dist = vertex.distanceTo(center)\r\n    // let h = 1 - math.sat(dist / size)\r\n    // h = h * h + h * (h * (h * a + b) + c)\r\n\r\n    v.z = a * Math.sin(b * v.x) + a * Math.cos(b * v.y)\r\n  })\r\n}\r\n\r\nconst Plane = props => {\r\n  const S = useControl('Size', { type: 'number', value: 15, min: 10, max: 30 })\r\n  const V = useControl('Vertices', {\r\n    type: 'number',\r\n    value: 50,\r\n    min: 10,\r\n    max: 100,\r\n  })\r\n\r\n  const a = useControl('A', { type: 'number', value: .4, min: -Math.PI, max: Math.PI })\r\n  const b = useControl('B', { type: 'number', value: 2.2, min: -Math.PI, max: Math.PI })\r\n\r\n  const geometry = new THREE.PlaneGeometry(S, S, V, V)\r\n\r\n  _ModifyVertices(geometry, S, a, b)\r\n\r\n  const material = new THREE.MeshBasicMaterial({\r\n    color: 'grey',\r\n    side: THREE.DoubleSide,\r\n    wireframe: true,\r\n  })\r\n\r\n  return <mesh args={[geometry, material]} {...props} />\r\n}\r\n\r\nexport const Terrain = () => {\r\n  return (\r\n    <>\r\n      <Plane rotation={[Math.PI / 2, 0, Math.PI / 2]} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Controls } from 'react-three-gui';\r\nimport { OrbitControls, softShadows } from '@react-three/drei'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Terrain } from './terrain/Terrain'\r\n\r\nimport './App.css'\r\n\r\nsoftShadows()\r\n\r\nexport default function App() {\r\n  return (\r\n    <Controls.Provider\r\n      shadowMap\r\n      gl={{ alpha: false }}\r\n      camera={{ position: [20, 3, 20], fov: 60 }}\r\n    >\r\n      <Controls.Canvas>\r\n        <OrbitControls />\r\n        <Lighting />\r\n        <Terrain />\r\n      </Controls.Canvas>\r\n      <Controls />\r\n    </Controls.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}