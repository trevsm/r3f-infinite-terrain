{"version":3,"sources":["lighting/Lighting.js","terrain/rock.jpg","terrain/DisplacementMap.png","terrain/grass.png","terrain/Grass.js","functions/Math.js","terrain/Water.js","terrain/Terrain.js","player/PlayerMovement.js","player/PlayerCamera.js","player/ball.jpg","player/Player.js","player/PlayerControls.js","App.js","index.js"],"names":["Lighting","props","Sky","distance","sunPosition","inclination","azimuth","position","shadow-camera-left","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-camera-near","shadow-camera-far","castShadow","Grass","geometry","initialPositions","vertices","forEach","v","z","Math","random","push","x","y","positions","useMemo","Float32Array","geom","useRef","texture","useLoader","THREE","grass","ref","attach","attachObject","count","length","array","itemSize","map","size","transparent","opacity","sizeAttenuation","depthWrite","side","perlin","rand_vect","theta","PI","cos","sin","dot_prod_grid","vx","vy","g_vect","d_vect","this","gradients","smootherstep","interp","a","b","seed","memory","get","hasOwnProperty","xf","floor","yf","tl","tr","bl","br","xt","xb","Water","W","useControl","type","value","min","max","usePlane","rotation","args","useFrame","current","receiveShadow","metalness","color","Plane","canyons","wireframe","mapSize","amp","xShift","yShift","rocks","dM","rocksDisp","material","displacementMap","useEffect","mV","height","modifiedVertices","Terrain","PlayerMovement","forwardRef","STATS","api","C","forward","backward","left","right","jump","run","velocity","jumpCoolDown","direction","frontVector","sideVector","camEuler","calculateVelocity","set","FinalSpeed","speed","pan_speed","run_speed","subVectors","normalize","multiplyScalar","applyEuler","camera","inertia","jump_height","subscribe","PlayerCamera","pos","player_height","moveCamera","PointerLockControls","Player","useSphere","mass","useThree","useState","movement","setMovement","keys","KeyW","KeyS","KeyA","KeyD","Space","ShiftLeft","moveFieldByKey","key","handleKeyDown","e","m","code","handleKeyUp","document","addEventListener","removeEventListener","usePlayerControls","ball","App","Provider","Canvas","shadowMap","gl","antialias","alpha","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f6764c7f.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as THREE from 'three'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <fog attach=\"fog\" args={['white', 0, 40]} /> */}\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[150, 150, 150]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight />\r\n      <directionalLight\r\n        position={[150, 150, 150]}\r\n        shadow-camera-left={-1000}\r\n        shadow-camera-bottom={-1000}\r\n        shadow-camera-right={1000}\r\n        shadow-camera-top={1000}\r\n        shadow-camera-near={0.1}\r\n        shadow-camera-far={1500}\r\n        castShadow\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rock.2a68dd7c.jpg\";","export default __webpack_public_path__ + \"static/media/DisplacementMap.876a1148.png\";","export default __webpack_public_path__ + \"static/media/grass.75f6dd80.png\";","import React, { useMemo, useRef } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useFrame, useLoader } from 'react-three-fiber'\r\nimport grass from './grass.png'\r\n\r\nexport function Grass({ geometry }) {\r\n  const initialPositions = []\r\n  geometry.vertices.forEach(v => {\r\n    if (v.z < -0.5 && Math.random() * 5 < 3) {\r\n      initialPositions.push(v.x + Math.random() / 3)\r\n      initialPositions.push(v.y + Math.random() / 3)\r\n      initialPositions.push(v.z + Math.random() / 3)\r\n    }\r\n  })\r\n\r\n  const positions = useMemo(() => new Float32Array(initialPositions), [\r\n    initialPositions,\r\n  ])\r\n\r\n  const geom = useRef()\r\n\r\n  const texture = useLoader(THREE.TextureLoader, grass)\r\n\r\n  return (\r\n    <>\r\n      <points ref={geom}>\r\n        <bufferGeometry attach=\"geometry\">\r\n          <bufferAttribute\r\n            attachObject={['attributes', 'position']}\r\n            count={positions.length / 3}\r\n            array={positions}\r\n            itemSize={3}\r\n          />\r\n        </bufferGeometry>\r\n        <pointsMaterial\r\n          map={texture}\r\n          size={2}\r\n          transparent\r\n          opacity={1}\r\n          sizeAttenuation\r\n          depthWrite={false}\r\n          side={THREE.DoubleSide}\r\n        />\r\n      </points>\r\n    </>\r\n  )\r\n}\r\n","export const math = (function () {\r\n  return {\r\n    rand_range: function (a, b) {\r\n      return Math.random() * (b - a) + a\r\n    },\r\n\r\n    rand_normalish: function () {\r\n      const r = Math.random() + Math.random() + Math.random() + Math.random()\r\n      return (r / 4.0) * 2.0 - 1\r\n    },\r\n\r\n    rand_int: function (a, b) {\r\n      return Math.round(Math.random() * (b - a) + a)\r\n    },\r\n\r\n    lerp: function (x, a, b) {\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    smoothstep: function (x, a, b) {\r\n      x = x * x * (3.0 - 2.0 * x)\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    smootherstep: function (x, a, b) {\r\n      x = x * x * x * (x * (x * 6 - 15) + 10)\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    clamp: function (x, a, b) {\r\n      return Math.min(Math.max(x, a), b)\r\n    },\r\n\r\n    sat: function (x) {\r\n      return Math.min(Math.max(x, 0.0), 1.0)\r\n    },\r\n\r\n    in_range: (x, a, b) => {\r\n      return x >= a && x <= b\r\n    },\r\n  }\r\n})()\r\n\r\nexport let perlin = {\r\n  rand_vect: function () {\r\n    let theta = Math.random() * 2 * Math.PI\r\n    return { x: Math.cos(theta), y: Math.sin(theta) }\r\n  },\r\n  dot_prod_grid: function (x, y, vx, vy) {\r\n    let g_vect\r\n    let d_vect = { x: x - vx, y: y - vy }\r\n    if (this.gradients[[vx, vy]]) {\r\n      g_vect = this.gradients[[vx, vy]]\r\n    } else {\r\n      g_vect = this.rand_vect()\r\n      this.gradients[[vx, vy]] = g_vect\r\n    }\r\n    return d_vect.x * g_vect.x + d_vect.y * g_vect.y\r\n  },\r\n  smootherstep: function (x) {\r\n    return 6 * x ** 5 - 15 * x ** 4 + 10 * x ** 3\r\n  },\r\n  interp: function (x, a, b) {\r\n    return a + this.smootherstep(x) * (b - a)\r\n  },\r\n  seed: function () {\r\n    this.gradients = {}\r\n  },\r\n  memory: {},\r\n  get: function (x, y) {\r\n    if (this.memory.hasOwnProperty([x, y])) return this.memory[[x, y]]\r\n    let xf = Math.floor(x)\r\n    let yf = Math.floor(y)\r\n    //interpolate\r\n    let tl = this.dot_prod_grid(x, y, xf, yf)\r\n    let tr = this.dot_prod_grid(x, y, xf + 1, yf)\r\n    let bl = this.dot_prod_grid(x, y, xf, yf + 1)\r\n    let br = this.dot_prod_grid(x, y, xf + 1, yf + 1)\r\n    let xt = this.interp(x - xf, tl, tr)\r\n    let xb = this.interp(x - xf, bl, br)\r\n    let v = this.interp(y - yf, xt, xb)\r\n    this.memory[[x, y]] = v\r\n    return v\r\n  },\r\n}\r\nperlin.seed()\r\n","import * as THREE from 'three'\r\nimport React from 'react'\r\n\r\nimport { MeshWobbleMaterial} from '@react-three/drei'\r\n\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { useControl } from 'react-three-gui'\r\nimport { usePlane } from 'use-cannon'\r\n\r\nexport function Water() {\r\n  const mapWidth = 1000,\r\n    mapLength = 1000\r\n  const vX = 64\r\n\r\n  const W = useControl('Water Level', {\r\n    type: 'number',\r\n    value: 0,\r\n    min: -5,\r\n    max: 5,\r\n  })\r\n\r\n  const [ref, api] = usePlane(() => ({\r\n    position: [0, W, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    args: [mapWidth, mapLength, vX, vX],\r\n  }))\r\n\r\n  useFrame(() => {\r\n    ref.current.position.y = W\r\n    // api.position.set([0, W, 0])\r\n  })\r\n\r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[mapWidth, mapLength, vX, vX]}\r\n      />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        side={THREE.DoubleSide}\r\n        metalness={2}\r\n        color='blue'\r\n        transparent\r\n        opacity={.2}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { useControl } from 'react-three-gui'\r\nimport { useConvexPolyhedron } from 'use-cannon'\r\n\r\nimport rocks from './rock.jpg'\r\nimport rocksDisp from './DisplacementMap.png'\r\nimport { Grass } from './Grass'\r\nimport { perlin } from '../functions/Math'\r\nimport { Water } from './Water'\r\n\r\nfunction modifiedVertices(geometry, amp, length, canyons, xShift, yShift) {\r\n  return geometry.vertices.map(v => {\r\n    let height = amp * perlin.get(length * v.x + xShift, length * v.y + yShift)\r\n\r\n    if (canyons) {\r\n      height += Math.floor(height)\r\n    }\r\n    return new THREE.Vector3(v.x, v.y, height)\r\n  })\r\n}\r\n\r\nconst Plane = props => {\r\n  const canyons = useControl('Canyons', {\r\n    type: 'boolean',\r\n    value: false,\r\n  })\r\n  const wireframe = useControl('Wireframe', {\r\n    type: 'boolean',\r\n    value: false,\r\n  })\r\n  const mapSize = useControl('Map Size', {\r\n    type: 'number',\r\n    value: 100,\r\n    min: 10,\r\n    max: 1000,\r\n  })\r\n  const vertices = useControl('Vertices', {\r\n    type: 'number',\r\n    value: 300,\r\n    min: 10,\r\n    max: 1000,\r\n  })\r\n  const amp = useControl('Amplitude', {\r\n    type: 'number',\r\n    value: 30,\r\n    min: 0,\r\n    max: 50,\r\n  })\r\n  const length = useControl('Length', {\r\n    type: 'number',\r\n    value: 0.03,\r\n    min: 0,\r\n    max: 0.1,\r\n  })\r\n  const xShift = useControl('X-Shift', {\r\n    type: 'number',\r\n    value: 0,\r\n    min: -5,\r\n    max: 5,\r\n  })\r\n  const yShift = useControl('Y-Shift', {\r\n    type: 'number',\r\n    value: 0,\r\n    min: -5,\r\n    max: 5,\r\n  })\r\n\r\n  const geometry = useRef(\r\n    new THREE.PlaneGeometry(mapSize, mapSize, vertices, vertices)\r\n  )\r\n\r\n  const texture = useLoader(THREE.TextureLoader, rocks)\r\n  const dM = useLoader(THREE.TextureLoader, rocksDisp)\r\n\r\n  // texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n  // texture.repeat.set(10, 10)\r\n\r\n  // dM.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n  // dM.repeat.set(10, 10)\r\n\r\n  const material = useRef(\r\n    new THREE.MeshPhongMaterial({\r\n      color: 'grey',\r\n      side: THREE.DoubleSide,\r\n      map: texture,\r\n      displacementMap: dM,\r\n      wireframe: wireframe,\r\n    })\r\n  )\r\n\r\n  // const [ref, api] = useConvexPolyhedron(() => ({\r\n  //   mass: 0,\r\n  //   type: 'Static',\r\n  //   rotation: [Math.PI / 2, 0, Math.PI / 2],\r\n  //   position: [0, 0, 0],\r\n  //   args: geometry.current,\r\n  // }))\r\n\r\n  const grass = useRef()\r\n\r\n  useEffect(() => {\r\n    geometry.current = new THREE.PlaneGeometry(\r\n      mapSize,\r\n      mapSize,\r\n      vertices,\r\n      vertices\r\n    )\r\n\r\n    const mV = modifiedVertices(\r\n      geometry.current,\r\n      amp,\r\n      length,\r\n      canyons,\r\n      xShift,\r\n      yShift\r\n    )\r\n    //set visible plane\r\n    geometry.current.vertices = mV\r\n    //set CVPH hitbox\r\n    grass.current = <Grass geometry={geometry.current} />\r\n  }, [canyons, wireframe, mapSize, amp, vertices, length, xShift, yShift])\r\n  //canyons, wireframe, mapSize, amp, vertices, length, xShift, yShift\r\n\r\n  return (\r\n    <>\r\n      <group rotation={[Math.PI/2, 0, Math.PI/2]}>{grass.current}</group>\r\n      <mesh\r\n        args={[geometry.current, material.current]}\r\n        castShadow\r\n        receiveShadow\r\n        {...props}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const Terrain = () => {\r\n  return (\r\n    <>\r\n      <Plane rotation={[Math.PI / 2, 0, Math.PI / 2]} />\r\n      <Water />\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef, forwardRef } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerMovement = forwardRef((props, ref) => {\r\n  const STATS = props.STATS\r\n  const api = props.api\r\n  const {forward, backward, left, right, jump, run} = props.C\r\n\r\n  const velocity = useRef([0, 0, 0])\r\n  const position = useRef([0, 0, 0])\r\n\r\n  //no continuous jumping\r\n  const jumpCoolDown = useRef()\r\n\r\n  const direction = new THREE.Vector3()\r\n  const frontVector = new THREE.Vector3()\r\n  const sideVector = new THREE.Vector3()\r\n\r\n  const camEuler = new THREE.Euler()\r\n\r\n  const playerOnGround = () => {\r\n    return position.current[1] < 1\r\n  }\r\n  // const playerOnGround = () => {\r\n  //   return true\r\n  // }\r\n\r\n  const applyFriction = () => {\r\n    velocity.current[0] -= velocity.current[0] / STATS.inertia\r\n    velocity.current[2] -= velocity.current[2] / STATS.inertia\r\n  }\r\n\r\n  const calculateVelocity = () => {\r\n    frontVector.set(0, 0, backward - forward)\r\n    sideVector.set(left - right, 0, 0)\r\n    camEuler.set(0, 0, 0)\r\n\r\n    let FinalSpeed = STATS.speed\r\n\r\n    if (left || right) {\r\n      FinalSpeed = STATS.pan_speed()\r\n    } else if (run) {\r\n      FinalSpeed = STATS.run_speed()\r\n    }\r\n\r\n    direction\r\n      .subVectors(frontVector, sideVector)\r\n      .normalize()\r\n      .multiplyScalar(FinalSpeed)\r\n      .applyEuler(props.camera.rotation)\r\n\r\n    applyFriction()\r\n\r\n    const v = [\r\n      velocity.current[0] + direction.x / STATS.inertia,\r\n      velocity.current[1],\r\n      velocity.current[2] + direction.z / STATS.inertia,\r\n    ]\r\n\r\n    if (playerOnGround()) {\r\n      api.velocity.set(v[0], v[1], v[2])\r\n\r\n      if (!jump) jumpCoolDown.current = false\r\n      if (jump && !jumpCoolDown.current) {\r\n        jumpCoolDown.current = true\r\n        api.velocity.set(v[0], STATS.jump_height(), v[2])\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.velocity.subscribe(v => (velocity.current = v))\r\n    api.position.subscribe(v => (position.current = v))\r\n  }, [])\r\n\r\n  useFrame(() => {\r\n    calculateVelocity()\r\n  })\r\n\r\n  return null\r\n})\r\n","import React from 'react'\r\n\r\nimport { PointerLockControls } from '@react-three/drei'\r\nimport { forwardRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerCamera = forwardRef((props, ref) => {\r\n  function moveCamera() {\r\n    const pos = ref.current.position\r\n\r\n    props.camera.position.y = pos.y + props.STATS.player_height\r\n\r\n    props.camera.position.x = pos.x\r\n\r\n    props.camera.position.z = pos.z\r\n  }\r\n\r\n  useFrame(() => {\r\n    moveCamera()\r\n  })\r\n\r\n  return <PointerLockControls/>\r\n})\r\n","export default __webpack_public_path__ + \"static/media/ball.f2754941.jpg\";","import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { useThree, useLoader } from 'react-three-fiber'\r\nimport { useSphere } from 'use-cannon'\r\n\r\nimport { PlayerMovement } from './PlayerMovement'\r\nimport { PlayerCamera } from './PlayerCamera'\r\nimport { usePlayerControls } from './PlayerControls'\r\n\r\nimport ball from './ball.jpg'\r\n\r\nexport default function Player(props) {\r\n  const STATS = {\r\n    speed: 5,\r\n    player_height: 2.5,\r\n    run_speed: () => STATS.speed * 2,\r\n    pan_speed: () => STATS.speed * 0.6,\r\n    jump_height: () => STATS.player_height * 3,\r\n    inertia: 5,\r\n  }\r\n\r\n  // Player hitbox\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 1,\r\n    type: 'Dynamic',\r\n    position: [0, STATS.player_height, 0],\r\n    size: [1, 32, 32],\r\n    ...props,\r\n  }))\r\n\r\n  const { camera } = useThree()\r\n  const { forward, backward, left, right, jump, run } = usePlayerControls()\r\n\r\n  const texture = useLoader(THREE.TextureLoader, ball)\r\n\r\n  return (\r\n    <group>\r\n      <PlayerCamera ref={ref} STATS={STATS} camera={camera} />\r\n      <PlayerMovement\r\n        ref={ref}\r\n        api={api}\r\n        STATS={STATS}\r\n        camera={camera}\r\n        C={{ forward, backward, left, right, jump, run }}\r\n      />\r\n      <mesh ref={ref} castShadow receiveShadow>\r\n        <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\r\n        <meshStandardMaterial attach=\"material\" map={texture} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({\r\n    forward: false,\r\n    backward: false,\r\n    left: false,\r\n    right: false,\r\n    jump: false,\r\n    run: false,\r\n  })\r\n\r\n  const keys = {\r\n    KeyW: 'forward',\r\n    KeyS: 'backward',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    Space: 'jump',\r\n    ShiftLeft: 'run',\r\n  }\r\n\r\n  const moveFieldByKey = key => keys[key]\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n\r\n    const handleKeyUp = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n","import React from 'react'\r\nimport { Controls } from 'react-three-gui'\r\n// import { OrbitControls, softShadows } from '@react-three/drei'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Terrain } from './terrain/Terrain'\r\nimport Player from './player/Player'\r\nimport { Physics } from 'use-cannon'\r\n\r\nimport './App.css'\r\n\r\n// <Canvas>\r\n// shadowMap\r\n// gl={{ alpha: false }}\r\n// camera={{ position: [30, 20, 30], fov: 90 }}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Controls.Provider>\r\n      <Controls.Canvas shadowMap gl={{ antialias: false, alpha: false }}>\r\n        <Lighting />\r\n        <Physics>\r\n          <Player />\r\n          <Terrain />\r\n        </Physics>\r\n      </Controls.Canvas>\r\n      <Controls />\r\n    </Controls.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}